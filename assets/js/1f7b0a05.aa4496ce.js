"use strict";(self.webpackChunkdistributed_systems=self.webpackChunkdistributed_systems||[]).push([[20],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),m=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=m(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=m(n),k=a,u=d["".concat(l,".").concat(k)]||d[k]||c[k]||o;return n?r.createElement(u,i(i({ref:t},p),{},{components:n})):r.createElement(u,i({ref:t},p))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var m=2;m<o;m++)i[m]=n[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3975:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>m});var r=n(7462),a=(n(7294),n(3905));const o={},i="Homework",s={unversionedId:"labs/Lab 1 - Git Basics/Homework",id:"labs/Lab 1 - Git Basics/Homework",title:"Homework",description:"Table of Contents",source:"@site/docs/labs/01.Lab 1 - Git Basics/Homework.md",sourceDirName:"labs/01.Lab 1 - Git Basics",slug:"/labs/Lab 1 - Git Basics/Homework",permalink:"/docs/labs/Lab 1 - Git Basics/Homework",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Cheatsheet",permalink:"/docs/labs/Lab 1 - Git Basics/Cheatsheet"},next:{title:"Lesson",permalink:"/docs/labs/Lab 1 - Git Basics/Lesson"}},l={},m=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"<strong>Homework Task 1: Initial Repository</strong>",id:"homework-task-1-initial-repository",level:2}],p={toc:m};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"homework"},"Homework"),(0,a.kt)("h1",{id:"homework-1-git-basics"},"Homework 1: Git Basics"),(0,a.kt)("h2",{id:"table-of-contents"},"Table of Contents"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#homework"},"Homework")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#homework-1-git-basics"},"Homework 1: Git Basics"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#table-of-contents"},"Table of Contents")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#homework-task-1-initial-repository"},(0,a.kt)("strong",{parentName:"a"},"Homework Task 1: Initial Repository")))))),(0,a.kt)("h2",{id:"homework-task-1-initial-repository"},(0,a.kt)("strong",{parentName:"h2"},"Homework Task 1: Initial Repository")),(0,a.kt)("p",null,"For homework:"),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("mdxAdmonitionTitle",{parentName:"admonition"},(0,a.kt)("strong",{parentName:"mdxAdmonitionTitle"},"IMPORTANT")),(0,a.kt)("p",{parentName:"admonition"},"The repository must be created in the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/fesb-distributed-systems-2024"},"\nFESB Distributed Systems 2024/25 Organisation"))),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Create a ",(0,a.kt)("em",{parentName:"li"},"GitHub")," repository named ",(0,a.kt)("inlineCode",{parentName:"li"},"{your-username}-hw-01"),"s"),(0,a.kt)("li",{parentName:"ol"},"Clone the repository as shown in the ",(0,a.kt)("a",{parentName:"li",href:"./Lesson"},"Lesson")),(0,a.kt)("li",{parentName:"ol"},"Create a ",(0,a.kt)("inlineCode",{parentName:"li"},"development")," branch"),(0,a.kt)("li",{parentName:"ol"},"Create a ",(0,a.kt)("em",{parentName:"li"},"readme file")," called ",(0,a.kt)("em",{parentName:"li"},"README.md"))),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("mdxAdmonitionTitle",{parentName:"admonition"},(0,a.kt)("strong",{parentName:"mdxAdmonitionTitle"},"NOTE")),(0,a.kt)("p",{parentName:"admonition"},"The ",(0,a.kt)("em",{parentName:"p"},"readme file")," is just a text file which uses ",(0,a.kt)("a",{parentName:"p",href:"https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax"},"GitHub Markdown"))),(0,a.kt)("ol",{start:5},(0,a.kt)("li",{parentName:"ol"},"In the ",(0,a.kt)("em",{parentName:"li"},"readme file")," write:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-md"},"# {your-username}'s First Repository\nHello, World!\n---\nAuthor: {your-username}\n")),(0,a.kt)("ol",{start:6},(0,a.kt)("li",{parentName:"ol"},"Stage, commit and push the changes to the remote repository.")),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("mdxAdmonitionTitle",{parentName:"admonition"},(0,a.kt)("strong",{parentName:"mdxAdmonitionTitle"},"IMPORTANT")),(0,a.kt)("p",{parentName:"admonition"},"All changes must be done on ",(0,a.kt)("inlineCode",{parentName:"p"},"development")," branch!")),(0,a.kt)("ol",{start:7},(0,a.kt)("li",{parentName:"ol"},"Create a pull request (PR) to merge ",(0,a.kt)("inlineCode",{parentName:"li"},"development")," branch into ",(0,a.kt)("inlineCode",{parentName:"li"},"main")),(0,a.kt)("li",{parentName:"ol"},"After the PR is approved, merge it.")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("mdxAdmonitionTitle",{parentName:"admonition"},(0,a.kt)("strong",{parentName:"mdxAdmonitionTitle"},"NOTE")),(0,a.kt)("p",{parentName:"admonition"},"If the PR is rejected, read the comments made by the assistant (",(0,a.kt)("inlineCode",{parentName:"p"},"pkaselj"),") and fix issues before ",(0,a.kt)("strong",{parentName:"p"},"submitting the PR again - do not merge if the PR is rejected"))))}c.isMDXComponent=!0}}]);