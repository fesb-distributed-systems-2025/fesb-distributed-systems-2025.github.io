"use strict";(self.webpackChunkdistributed_systems=self.webpackChunkdistributed_systems||[]).push([[487],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>h});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var m=n.createContext({}),s=function(e){var t=n.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=s(e.components);return n.createElement(m.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,m=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),g=s(a),h=r,u=g["".concat(m,".").concat(h)]||g[h]||k[h]||i;return a?n.createElement(u,l(l({ref:t},p),{},{components:a})):n.createElement(u,l({ref:t},p))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=g;var o={};for(var m in t)hasOwnProperty.call(t,m)&&(o[m]=t[m]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},79:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>l,default:()=>k,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var n=a(7462),r=(a(7294),a(3905));const i={},l="Cheatsheet",o={unversionedId:"labs/Lab 1 - Git Basics/Cheatsheet",id:"labs/Lab 1 - Git Basics/Cheatsheet",title:"Cheatsheet",description:"Table of Contents",source:"@site/docs/labs/01.Lab 1 - Git Basics/Cheatsheet.md",sourceDirName:"labs/01.Lab 1 - Git Basics",slug:"/labs/Lab 1 - Git Basics/Cheatsheet",permalink:"/docs/labs/Lab 1 - Git Basics/Cheatsheet",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Lesson",permalink:"/docs/labs/Lab 0 - Environment Setup/Lesson"},next:{title:"Homework",permalink:"/docs/labs/Lab 1 - Git Basics/Homework"}},m={},s=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"<strong>1. Terminology</strong>",id:"1-terminology",level:2},{value:"<strong>2. Using Git</strong>",id:"2-using-git",level:2},{value:"<strong>2.1. Creating a Repository</strong>",id:"21-creating-a-repository",level:3},{value:"<strong>2.2. Working on the Project</strong>",id:"22-working-on-the-project",level:3},{value:"<strong>2.3. Making Changes</strong>",id:"23-making-changes",level:3},{value:"<strong>2.4. Applying Changes to the <code>main</code> Branch</strong>",id:"24-applying-changes-to-the-main-branch",level:3},{value:"<strong>2.5. Downloading Changes from Remote Repository (GitHub)</strong>",id:"25-downloading-changes-from-remote-repository-github",level:3},{value:"<strong>3. Commands</strong>",id:"3-commands",level:2},{value:"<strong>3.1. Status</strong>",id:"31-status",level:3},{value:"<strong>3.2. Stashing</strong>",id:"32-stashing",level:3},{value:"<strong>3.3. Commiting</strong>",id:"33-commiting",level:3},{value:"<strong>3.4. Pushing and Pulling</strong>",id:"34-pushing-and-pulling",level:3},{value:"<strong>3.5. Branching</strong>",id:"35-branching",level:3},{value:"<strong>3.5.1. General</strong>",id:"351-general",level:4},{value:"<strong>3.5.2. Checkout</strong>",id:"352-checkout",level:4},{value:"<strong>3.5.3. Creating a Branch</strong>",id:"353-creating-a-branch",level:4},{value:"<strong>3.6. Gitk</strong>",id:"36-gitk",level:3}],p={toc:s};function k(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"cheatsheet"},"Cheatsheet"),(0,r.kt)("h1",{id:"cheatsheet-1-git-basics"},"Cheatsheet 1: Git Basics"),(0,r.kt)("h2",{id:"table-of-contents"},"Table of Contents"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#cheatsheet"},"Cheatsheet")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#cheatsheet-1-git-basics"},"Cheatsheet 1: Git Basics"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#table-of-contents"},"Table of Contents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1-terminology"},(0,r.kt)("strong",{parentName:"a"},"1. Terminology"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#2-using-git"},(0,r.kt)("strong",{parentName:"a"},"2. Using Git")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#21-creating-a-repository"},(0,r.kt)("strong",{parentName:"a"},"2.1. Creating a Repository"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#22-working-on-the-project"},(0,r.kt)("strong",{parentName:"a"},"2.2. Working on the Project"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#23-making-changes"},(0,r.kt)("strong",{parentName:"a"},"2.3. Making Changes"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#24-applying-changes-to-the-main-branch"},(0,r.kt)("strong",{parentName:"a"},"2.4. Applying Changes to the ",(0,r.kt)("inlineCode",{parentName:"strong"},"main")," Branch"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#25-downloading-changes-from-remote-repository-github"},(0,r.kt)("strong",{parentName:"a"},"2.5. Downloading Changes from Remote Repository (GitHub)"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#3-commands"},(0,r.kt)("strong",{parentName:"a"},"3. Commands")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#31-status"},(0,r.kt)("strong",{parentName:"a"},"3.1. Status"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#32-stashing"},(0,r.kt)("strong",{parentName:"a"},"3.2. Stashing"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#33-commiting"},(0,r.kt)("strong",{parentName:"a"},"3.3. Commiting"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#34-pushing-and-pulling"},(0,r.kt)("strong",{parentName:"a"},"3.4. Pushing and Pulling"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#35-branching"},(0,r.kt)("strong",{parentName:"a"},"3.5. Branching")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#351-general"},(0,r.kt)("strong",{parentName:"a"},"3.5.1. General"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#352-checkout"},(0,r.kt)("strong",{parentName:"a"},"3.5.2. Checkout"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#353-creating-a-branch"},(0,r.kt)("strong",{parentName:"a"},"3.5.3. Creating a Branch"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#36-gitk"},(0,r.kt)("strong",{parentName:"a"},"3.6. Gitk")))))))),(0,r.kt)("h2",{id:"1-terminology"},(0,r.kt)("strong",{parentName:"h2"},"1. Terminology")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git")," - Tool for Source Version Control"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"GitHub")," - A platform for storing code (git repositories)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Local repository")," - A repository located on the PC"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Remote repository")," - A repository located on the ",(0,r.kt)("em",{parentName:"li"},"GitHub")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Pull Request (PR)")," - Request to merge two branches (on remote repository i.e. ",(0,r.kt)("em",{parentName:"li"},"GitHub"),")")),(0,r.kt)("h2",{id:"2-using-git"},(0,r.kt)("strong",{parentName:"h2"},"2. Using Git")),(0,r.kt)("h3",{id:"21-creating-a-repository"},(0,r.kt)("strong",{parentName:"h3"},"2.1. Creating a Repository")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create repository on GitHub"),(0,r.kt)("li",{parentName:"ol"},"Clone repository to PC",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git clone <repo-url>"))))),(0,r.kt)("h3",{id:"22-working-on-the-project"},(0,r.kt)("strong",{parentName:"h3"},"2.2. Working on the Project")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"The git repository is initialized with ",(0,r.kt)("inlineCode",{parentName:"li"},"main")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"master")," branch"),(0,r.kt)("li",{parentName:"ol"},"Create a development branch ",(0,r.kt)("inlineCode",{parentName:"li"},"development")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"dev"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git checkout -b development"))))),(0,r.kt)("h3",{id:"23-making-changes"},(0,r.kt)("strong",{parentName:"h3"},"2.3. Making Changes")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Make changes to local repository"),(0,r.kt)("li",{parentName:"ol"},"Stash changes",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git add .")))),(0,r.kt)("li",{parentName:"ol"},"Repeat steps 1-2"),(0,r.kt)("li",{parentName:"ol"},"Commit stashed changes and write a comment",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'git commit -m "<comment>"')))),(0,r.kt)("li",{parentName:"ol"},"Repeat steps 1-4"),(0,r.kt)("li",{parentName:"ol"},"Push",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git push"))))),(0,r.kt)("h3",{id:"24-applying-changes-to-the-main-branch"},(0,r.kt)("strong",{parentName:"h3"},"2.4. Applying Changes to the ",(0,r.kt)("inlineCode",{parentName:"strong"},"main")," Branch")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"On GitHub, create a ",(0,r.kt)("em",{parentName:"li"},"Pull Request")," from ",(0,r.kt)("inlineCode",{parentName:"li"},"development")," to ",(0,r.kt)("inlineCode",{parentName:"li"},"main")," branch",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Set ",(0,r.kt)("inlineCode",{parentName:"li"},"pkaselj")," as reviewer"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Do not merge before ",(0,r.kt)("inlineCode",{parentName:"strong"},"pkaselj")," approves the PR")))),(0,r.kt)("li",{parentName:"ol"},"Wait for ",(0,r.kt)("inlineCode",{parentName:"li"},"pkaselj"),"'s approval"),(0,r.kt)("li",{parentName:"ol"},"If ",(0,r.kt)("strong",{parentName:"li"},"APPROVED"),", go ahead and merge the PR"),(0,r.kt)("li",{parentName:"ol"},"If ",(0,r.kt)("strong",{parentName:"li"},"REJECTED"),", fix errors/comments as described in ",(0,r.kt)("a",{parentName:"li",href:"#making-changes"},(0,r.kt)("inlineCode",{parentName:"a"},"Making Changes")))),(0,r.kt)("h3",{id:"25-downloading-changes-from-remote-repository-github"},(0,r.kt)("strong",{parentName:"h3"},"2.5. Downloading Changes from Remote Repository (GitHub)")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"After merging a ",(0,r.kt)("em",{parentName:"li"},"Pull Request"),", the changes are visible only in remote repository (",(0,r.kt)("em",{parentName:"li"},"GitHub"),")"),(0,r.kt)("li",{parentName:"ol"},'To "download" changes from ',(0,r.kt)("inlineCode",{parentName:"li"},"GitHub")," to local repository on PC, first checkout the ",(0,r.kt)("inlineCode",{parentName:"li"},"main")," branch and then ",(0,r.kt)("em",{parentName:"li"},"pull")," the changes",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git checkout main")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git pull"))))),(0,r.kt)("h2",{id:"3-commands"},(0,r.kt)("strong",{parentName:"h2"},"3. Commands")),(0,r.kt)("h3",{id:"31-status"},(0,r.kt)("strong",{parentName:"h3"},"3.1. Status")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git status")," - shows ",(0,r.kt)("em",{parentName:"li"},"uncommited")," changes")),(0,r.kt)("h3",{id:"32-stashing"},(0,r.kt)("strong",{parentName:"h3"},"3.2. Stashing")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git stash <file1> <file2> ... <fileN>")," - stash files: ",(0,r.kt)("inlineCode",{parentName:"li"},"file1 file2 ... file N"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"git stash README.md main.cs")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git stash <directory1> <directory2> ... <directoryN>")," - stash whole directories",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"git stash include/ source/")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git stash .")," - stash all changes")),(0,r.kt)("h3",{id:"33-commiting"},(0,r.kt)("strong",{parentName:"h3"},"3.3. Commiting")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'git commit -m "<comment>"')," - Create a commit from ",(0,r.kt)("em",{parentName:"li"},"stashed")," files and directories",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'git commit -m "Added a new button for deleting users"'))))),(0,r.kt)("h3",{id:"34-pushing-and-pulling"},(0,r.kt)("strong",{parentName:"h3"},"3.4. Pushing and Pulling")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git push")," - Push all ",(0,r.kt)("em",{parentName:"li"},"committed")," changes from local repository (PC) to remote repository (",(0,r.kt)("em",{parentName:"li"},"GitHub"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git pull")," - Pull all commits from remote repository (",(0,r.kt)("em",{parentName:"li"},"GitHub"),") to local repository (PC)")),(0,r.kt)("h3",{id:"35-branching"},(0,r.kt)("strong",{parentName:"h3"},"3.5. Branching")),(0,r.kt)("h4",{id:"351-general"},(0,r.kt)("strong",{parentName:"h4"},"3.5.1. General")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git branch")," - Get name of the ",(0,r.kt)("em",{parentName:"li"},"current")," branch"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git branch -l")," - List all branches"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git branch -d <branch>")," - Delete ",(0,r.kt)("inlineCode",{parentName:"li"},"<branch>"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git branch -d development")," - Delete ",(0,r.kt)("inlineCode",{parentName:"li"},"development")," branch ")))),(0,r.kt)("h4",{id:"352-checkout"},(0,r.kt)("strong",{parentName:"h4"},"3.5.2. Checkout")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git checkout <branch>")," - Switch to a ",(0,r.kt)("inlineCode",{parentName:"li"},"<branch>"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git checkout main")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git checkout development")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git checkout <commit>")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git checkout <tag>"))),(0,r.kt)("h4",{id:"353-creating-a-branch"},(0,r.kt)("strong",{parentName:"h4"},"3.5.3. Creating a Branch")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git branch <branch>")," - Creates a branch named ",(0,r.kt)("inlineCode",{parentName:"li"},"<branch>")," ",(0,r.kt)("strong",{parentName:"li"},"but doesn't switch to that (new) branch")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git checkout -b <branch>")," - Creates a branch named ",(0,r.kt)("inlineCode",{parentName:"li"},"<branch>")," ",(0,r.kt)("strong",{parentName:"li"},"and immediately switches to that (new) branch"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"li"},"git branch <branch> && git checkout <branch>"))))),(0,r.kt)("h3",{id:"36-gitk"},(0,r.kt)("strong",{parentName:"h3"},"3.6. Gitk")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gitk")," - Show history of the current branch"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gitk --all")," - Show history of all branches")))}k.isMDXComponent=!0}}]);